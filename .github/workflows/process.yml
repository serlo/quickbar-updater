# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Create quickbar data

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "fix-metadata"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 2 * * *"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      SA_KEY: ${{ secrets.SA_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Use backup (temporary)
        run: |
          mkdir _output
          cp backup/quickbar.json _output/quickbar.json
      # - name: Install
      #   run: yarn
      # - name: FETCH
      #   run: yarn 1-fetch
      # - name: EXTRACT
      #   run: yarn 2-extract
      # - name: METADATA
      #   run: yarn 3-metadata
      # - name: PROCESS
      #   run: yarn 4-process
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "_output/"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
